import java.util.Arrays;

public class MinimumSwaps {
    public static void main(String[] args) {
        int[] arr = {5, 4, 3, 2, 1};

        System.out.println(countingSwaps(arr));
    }

    private static int countingSwaps(int[] arr){
        int n = arr.length;
        int ans = 0;
        int[][] ap = new int[n][2];
        for(int i = 0; i < n; i++){
            ap[i][0] = arr[i];
            ap[i][1] = i;
        }

        Arrays.sort(ap, (a, b) -> a[0] - b[0]);

        boolean[] visited = new boolean[n];
        for(int i = 0; i < n; i++){
           //if the element is visited or the element is in the correct position
           int old_position = ap[i][1];
           if(visited[i]==true || old_position == i){
              continue;
           }

           //if the element is visited for the first time
           int node = i;
           int cycle = 0;

           while(!visited[node]){
                 visited[node] = true;
                 int next_node = ap[node][1];
                 node = next_node;
                 cycle += 1;
           }
           ans += (cycle-1);
        }
        return ans;
    }
}
