package com.dynamic.programming;

import java.util.Scanner;

public class CountPaths {

	public static void main(String[] args) {

		Scanner sn = new Scanner(System.in);
		int n = sn.nextInt();
		
		int[] qb = new int[n + 1];
		
		int cp = countPaths(n, qb);
		int cpt = countPathsTab(n);
		System.out.println(cp);
		System.out.println(cpt);
		sn.close();
	}

	private static int countPaths(int n, int[] qb) {
		
		if(n == 0) {
			return 1;
		}else if(n < 0) {
			return 0;
		}
		
		if(qb[n] > 0) {
			return qb[n];
		}
		
		System.out.println("Hello : " + n);
		int cp1 = countPaths(n - 1, qb);
		int cp2 = countPaths(n - 2, qb);
		int cp3 = countPaths(n - 3, qb);
		
		int cp = cp1 + cp2 + cp3;
		qb[n] = cp;
		
		return cp;
	}
	
	private static int countPathsTab(int n) {
		int[] dp = new int[n + 1];
		
		dp[0] = 1;
		
		for(int i = 1; i <= n; i++) {
			if(i == 1) {
				dp[i] = dp[i - 1];
			}else if(i == 2) {
				dp[i] = dp[i - 1] + dp[i - 2];
			}else {
				dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3];
			}
		}
		
		return dp[n];
	}
}
