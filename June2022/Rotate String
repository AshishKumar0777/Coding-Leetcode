Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.
A shift on s consists of moving the leftmost character of s to the rightmost position.
For example, if s = "abcde", then it will be "bcdea" after one shift. 

Example 1:
Input: s = "abcde", goal = "cdeab"
Output: true

Example 2:
Input: s = "abcde", goal = "abced"
Output: false 

Constraints:
1 <= s.length, goal.length <= 100
s and goal consist of lowercase English letters.

class Solution {
    public boolean rotateString(String s, String goal) {
        
        /*
        if(s.equals(goal)) return true;
        for(int i = 1; i < s.length(); i++){
            String s1 = s.substring(i);
            String s2 = s.substring(0, i);
            
            String s3 = addSubStrings(s1, s2);
            if(s3.equals(goal)) return true;
        }
        
        return false;
    }
    
    private String addSubStrings(String s1, String s2){
        return s1 + s2;
        
        if(s.length() != goal.length()) return false;
        
        return (s+s).indexOf(goal)>=0;
        */
        
        return s.length() == goal.length() && (s + s).contains(goal);
    }
}
