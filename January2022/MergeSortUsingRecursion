package com.recursion;

public class MergeSort {

	public static void mergeSort(int[] arr, int start, int end) {
		
		if(start >= end) {
			return;
		}
		
		int mid = (start + end) / 2;
		mergeSort(arr, start, mid);
		mergeSort(arr, mid + 1, end);
		merge(arr, start, end);
	}
	
	public static void merge(int[] arr, int start, int end) {
		int[] ans = new int[end - start + 1];
		int mid = (start + end) / 2;
		int i = start;
		int j = mid + 1;
		int k = 0;
		
		while(i <= mid && j <= end) {
			if(arr[i] < arr[j]) {
				ans[k] = arr[i];
				i++;
				k++;
			}else {
				ans[k] = arr[j];
				j++;
				k++;
			}
		}
		while(i <= mid) {
			ans[k] = arr[i];
			i++;
			k++;
		}
		while(j <= end) {
			ans[k] = arr[j];
			j++;
			k++;
		}
		int t = 0;
		for(int v = start; v <= end; v++) {
			arr[v] = ans[t];
			t++;
		}
	}
	
	public static void main(String[] args) {
		int[] arr = {2, 7, 5, 4, 8, 9};
		mergeSort(arr, 0, 5);
		for(int i = 0; i < arr.length; i++) {
			System.out.print(arr[i] + " ");
		}
	}

}
