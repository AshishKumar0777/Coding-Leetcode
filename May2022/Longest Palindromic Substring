Given a string s, return the longest palindromic substring in s. 

Example 1:
Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.

Example 2:
Input: s = "cbbd"
Output: "bb" 

Constraints:
1 <= s.length <= 1000
s consist of only digits and English letters.

class Solution {
    int maxLen = 0;
    int startingPoint = 0;
    
    public String longestPalindrome(String s) {
        
        if(s.length() <= 1){
            return s;
        }
        
        for(int i = 0; i < s.length(); i++){
            isPalindrome(s, i, i);
            isPalindrome(s, i, i+1);
        }        
        return s.substring(startingPoint, maxLen+startingPoint);
    }
    
    private void isPalindrome(String t, int left, int right){
        
        while(left >= 0 && right < t.length() && t.charAt(left) == t.charAt(right)){
            left--;
            right++;
        }
        
        if(maxLen < right - left - 1){
            maxLen = right - left - 1;
            startingPoint = left+1;
        }
    }
}
