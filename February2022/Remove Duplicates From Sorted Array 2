Example 1:
Input: nums = [1,1,1,2,2,3]
Output: 5, nums = [1,1,2,2,3,_]
Explanation: Your function should return k = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.
It does not matter what you leave beyond the returned k (hence they are underscores).

Example 2:
Input: nums = [0,0,1,1,1,1,2,3,3]
Output: 7, nums = [0,0,1,1,2,3,3,_,_]
Explanation: Your function should return k = 7, with the first seven elements of nums being 0, 0, 1, 1, 2, 3 and 3 respectively.
It does not matter what you leave beyond the returned k (hence they are underscores).

class Solution {
    public int removeDuplicates(int[] nums) {
        int start = 0, end = 0, len = 0;
        
        while(start < nums.length){
            int sIndex = start;
            
            while(start < nums.length - 1 && nums[start] == nums[start + 1]){
                start++;
            }
            
            int length = start - sIndex + 1;
            int freq = Math.min(length, 2);
            
            while(freq-- > 0){
                nums[len] = nums[sIndex];
                len++;
            }
            start++;
        }
        return len;
    }
}
