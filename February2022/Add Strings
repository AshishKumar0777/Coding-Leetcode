Given two non-negative integers, num1 and num2 represented as string, return the sum of num1 and num2 as a string.

Example 1:
Input: num1 = "11", num2 = "123"
Output: "134"

Example 2:
Input: num1 = "456", num2 = "77"
Output: "533"

Example 3:
Input: num1 = "0", num2 = "0"
Output: "0"

import java.math.BigInteger;
class Solution {
    
    public String addStrings(String num1, String num2) {
        /*
        BigInteger n1 = new BigInteger(num1);
        BigInteger n2 = new BigInteger(num2);
        String ans = String.valueOf(n1.add(n2));
        
        return ans;
        */
    StringBuffer sb = new StringBuffer();
    int i = num1.length() - 1;
    int j = num2.length() - 1;
    int carry = 0;
    
    while(i >= 0 || j >= 0 || carry > 0){
        int a = 0;
        int b = 0;
        if(i >= 0)
        a = num1.charAt(i) - '0';
        if(j >= 0)
        b = num2.charAt(j) - '0';
        
        int sum = a + b + carry;
        int rem = sum % 10;
        carry = sum / 10;
        sb.append(rem);
        
        i--;
        j--;
    }
        return sb.reverse().toString();
    }
}
