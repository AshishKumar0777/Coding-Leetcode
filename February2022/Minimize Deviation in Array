Example 1:
Input: nums = [1,2,3,4]
Output: 1
Explanation: You can transform the array to [1,2,3,2], then to [2,2,3,2], then the deviation will be 3 - 2 = 1.

Example 2:
Input: nums = [4,1,5,20,3]
Output: 3
Explanation: You can transform the array after two operations to [4,2,5,5,3], then the deviation will be 5 - 2 = 3.

Example 3:
Input: nums = [2,10,8]
Output: 3

class Solution {
    public int minimumDeviation(int[] nums) {
        TreeSet<Integer> set = new TreeSet<>();
        
        for(int el : nums){
            if(el % 2 == 0){
                set.add(el);
            }else{
                set.add(el * 2);
            }
        }
        
        int diff = Integer.MAX_VALUE;
        
        while(true){
            int last = set.last();
            int first = set.first();
            int currDiff = last - first;
            diff = Math.min(currDiff, diff);
            
            if(last % 2 == 0){
                set.remove(last);
                set.add(last / 2);
            }else{
                return diff;
            }
        }
    }
}
