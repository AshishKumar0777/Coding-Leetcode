You are given two strings s and t. In one step, you can append any character to either s or t.

Return the minimum number of steps to make s and t anagrams of each other.

An anagram of a string is a string that contains the same characters with a different (or the same) ordering. 

Example 1:
Input: s = "leetcode", t = "coats"
Output: 7
Explanation: 
- In 2 steps, we can append the letters in "as" onto s = "leetcode", forming s = "leetcodeas".
- In 5 steps, we can append the letters in "leede" onto t = "coats", forming t = "coatsleede".
"leetcodeas" and "coatsleede" are now anagrams of each other.
We used a total of 2 + 5 = 7 steps.
It can be shown that there is no way to make them anagrams of each other with less than 7 steps.

Example 2:
Input: s = "night", t = "thing"
Output: 0
Explanation: The given strings are already anagrams of each other. Thus, we do not need any further steps.

class Solution {
    public int minSteps(String s, String t) {
        int[] freq1 = new int[26];
        int[] freq2 = new int[26];
        int count = 0;
        
        for(int i = 0; i < s.length(); i++){
            int index = s.charAt(i) - 'a';
            freq1[index]++;
        }
        
        for(int i = 0; i < t.length(); i++){
            int index = t.charAt(i) - 'a';
            freq2[index]++;
        }
        
        for(int i = 0; i < 26; i++){
            if(freq1[i] > freq2[i]){
                count = count + freq1[i] - freq2[i];
            }else if(freq2[i] > freq1[i]){
                count = count + freq2[i] - freq1[i];
            }else{
                continue;
            }
        }
        return count;
    }
}

class Solution {
    public int minSteps(String s, String t) {
        int[] freq1 = new int[26];
        int count = 0;
        
        for(int i = 0; i < s.length(); i++){
            int index = s.charAt(i) - 'a';
            freq1[index]++;
        }
        
        for(int i = 0; i < t.length(); i++){
            int index = t.charAt(i) - 'a';
            freq1[index]--;
        }
        
        for(int x : freq1){
            count += Math.abs(x);
        }
        return count;
    }
}
