Example 1:
Input: nums = [1,2,3,4]
Output: [24,12,8,6]

Example 2:
Input: nums = [-1,1,0,-3,3]
Output: [0,0,9,0,0]

class Solution {
    public int[] productExceptSelf(int[] nums) {
        /*
        int n = nums.length;
        int[] output = new int[n];
        int product = 1;
        
        for(int i = 0; i < n; i++){
            product = product * nums[i];
        }
        
        for(int i = 0; i < n; i++){
            int temp = product;
            int prod = 1;
            if(nums[i] == 0){
                for(int j = 0; j < i; j++){
                    prod = prod * nums[j];
                }
                for(int j = i + 1; j < n; j++){
                    prod = prod * nums[j];
                }
                output[i] = prod;
            }else{
            int ans = temp / nums[i];
            output[i] = ans;
            }
        }
        return output;
        */
        int[] leftArray = new int[nums.length];
        int[] rightArray = new int[nums.length];
        int[] output = new int[nums.length];
        
        int leftProduct = 1;
        
        for(int i = 0; i < nums.length; i++){
            leftProduct = nums[i] * leftProduct;
            leftArray[i] = leftProduct;
        }
        
        int rightProduct = 1;
        
        for(int i = nums.length - 1; i >= 0; i--){
            rightProduct = nums[i] * rightProduct;
            rightArray[i] = rightProduct;
        }
        
        for(int i = 0; i < nums.length; i++){
            int leftProd = i >= 1 ? leftArray[i - 1] : 1;
            int rightProd = i < nums.length - 1 ? rightArray[i + 1] : 1;
            output[i] = leftProd * rightProd;
        }
        return output;
    }
}
