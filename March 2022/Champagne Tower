Example 1:
Input: poured = 1, query_row = 1, query_glass = 1
Output: 0.00000
Explanation: We poured 1 cup of champange to the top glass of the tower (which is indexed as (0, 0)). There will be no excess liquid so all the glasses under the top glass will 
remain empty.

Example 2:
Input: poured = 2, query_row = 1, query_glass = 1
Output: 0.50000
Explanation: We poured 2 cups of champange to the top glass of the tower (which is indexed as (0, 0)). There is one cup of excess liquid. The glass indexed as (1, 0) and the glass 
indexed as (1, 1) will share the excess liquid equally, and each will get half cup of champange.

Example 3:
Input: poured = 100000009, query_row = 33, query_glass = 17
Output: 1.00000

class Solution {
    public double champagneTower(int poured, int query_row, int query_glass) {
        double[][] quantity = new double[101][101];
        quantity[0][0] = poured;
        
        for(int i = 0; i < query_row; i++){
            for(int j = 0; j <= query_glass; j++){
                double remaining = Math.max(quantity[i][j] - 1.0, 0);
                quantity[i + 1][j] += remaining / 2.0;
                quantity[i + 1][j + 1] += remaining / 2.0;
            }
        }
        return Math.min(quantity[query_row][query_glass], 1.0);
    }
}
